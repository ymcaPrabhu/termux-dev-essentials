import { AbstractTextMessage } from '../AbstractTextMessage.js';
import { Channels } from '../../enums/Channels.js';
import { ViberActionParams } from '../../types/Channels/Viber/ViberActionParams.js';
import { ViberTextParams } from '../../types/Channels/Viber/ViberTextParams.js';
import '../AbstractMessage.js';
import '../../enums/MessageTypes.js';
import '../../types/MessageParams.js';
import '../../types/MessageParamsText.js';
import '../../types/Channels/Viber/ViberService.js';
import '../../enums/Viber/ViberCategory.js';
import '../../types/Channels/Viber/ViberAction.js';
import '../../types/Channels/Viber/ViberParams.js';

/**
 * Represents a text message for the Viber Service channel.
 *
 * @group Viber
 */
declare class ViberText extends AbstractTextMessage implements ViberTextParams {
    /**
     * The channel for this message (always 'viber_service').
     */
    channel: Channels.VIBER;
    viberService: ViberActionParams;
    /**
     * Send a text message using the Viber Service channel.
     *
     * @param {ViberTextParams} params - The parameters for the ViberText message.
     *
     * @example
     * ```ts
     * import { ViberText } from '@vonage/messages';
     *
     * const { messageUUID } = await messagesClient.send(new ViberText({
     *  to: TO_NUMBER,
     *  from: FROM_NUMBER,
     *  text: 'Hello world',
     *  viberService: {
     *    action: {
     *      url: 'https://my-host.com/my-path',
     *      text: 'My button text',
     *    },
     *  },
     *  clientRef: 'my-personal-reference',
     * }));
     *
     * console.log(`Message sent successfully with UUID ${messageUUID}`);
     * ```
     */
    constructor(params: Omit<ViberTextParams, 'channel' | 'messageType'>);
}

export { ViberText };
