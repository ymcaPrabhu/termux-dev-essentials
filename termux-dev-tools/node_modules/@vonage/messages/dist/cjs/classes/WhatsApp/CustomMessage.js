"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/classes/WhatsApp/CustomMessage.ts
var CustomMessage_exports = {};
__export(CustomMessage_exports, {
  CustomMessage: () => CustomMessage
});
module.exports = __toCommonJS(CustomMessage_exports);

// lib/classes/AbstractMessage.ts
var AbstractMessage = class {
  /**
   * The recipient of the message.
   */
  to;
  /**
   * The sender of the message.
   */
  from;
  /**
   * An optional client reference for the message.
   */
  clientRef;
  /**
   * Specifies the URL to which Status Webhook messages will be sent for this
   * particular message. Over-rides account-level and application-level Status
   * Webhook url settings on a per-message basis.
   */
  webhookUrl;
  /**
   * Specifies which version of the Messages API will be used to send Status
   * Webhook messages for this particular message. For example, if v0.1 is
   * set, then the JSON body of Status Webhook messages for this message will
   * be sent in Messages v0.1 format. Over-rides account-level and
   * application-level API version settings on a per-message basis.
   */
  webhookVersion;
  /**
   * Constructs a new `AbstractMessage` instance.
   *
   * @param {MessageParams} params - The parameters for creating a message.
   */
  constructor(params) {
    this.to = params.to;
    this.from = params.from;
    this.clientRef = params.clientRef;
    this.webhookUrl = params.webhookUrl;
    this.webhookVersion = params.webhookVersion;
  }
};

// lib/classes/WhatsApp/WhatsAppCustom.ts
var WhatsAppCustom = class extends AbstractMessage {
  /**
   * The channel for this message (always 'whatsapp').
   */
  channel = "whatsapp" /* WHATSAPP */;
  /**
   * The type of message (always 'custom').
   */
  messageType = "custom" /* CUSTOM */;
  custom;
  context;
  /**
   * Sends a custom message to a WhatsApp user.
   *
   * @param {WhatsAppCustomParams} params - The parameters for creating a WhatsApp custom message.
   * @example
   * ```ts
   * import { WhatsAppCustom } from '@vonage/messages';
   *
   * const { messageUUID } = await messagesClient.send(new WhatsAppCustom({
   *  to: TO_NUMBER,
   *  from: FROM_NUMBER,
   *  custom: {
   *    type: 'template',
   *    template: {
   *      namespace: 'your-namespace',
   *      name: 'your-template-name',
   *    },
   *  }
   *  clientRef: 'my-personal-reference',
   * }));
   *
   * console.log(`Message sent successfully with UUID ${messageUUID}`);
   * ```
   */
  constructor(params) {
    super(params);
    this.custom = params.custom;
    if (params.context) {
      this.context = params.context;
    }
  }
};

// lib/classes/WhatsApp/CustomMessage.ts
var import_debug = __toESM(require("debug"));
var log = (0, import_debug.default)("vonage:messages:whatsapp");
var CustomMessage = class extends WhatsAppCustom {
  /**
   * Constructs a new `CustomMessage` instance for WhatsApp.
   *
   * @param {CustomPayload} custom - The custom payload for the message.
   * @param {string} to - The recipient's WhatsApp number.
   * @param {string} from - The sender's WhatsApp number.
   * @param {string} clientRef - (Optional) A unique client reference for the message.
   */
  constructor(custom, to, from, clientRef) {
    log("Please update to use the WhatsAppCustom class instead");
    super({
      to,
      from,
      clientRef,
      custom
    });
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CustomMessage
});
