import { AbstractTextMessage } from '../AbstractTextMessage.mjs';
import { Channels } from '../../enums/Channels.mjs';
import { MessengerType } from '../../types/Channels/Messenger/MessengerType.mjs';
import { MessengerTextParams } from '../../types/Channels/Messenger/MessengerTextParams.mjs';
import '../AbstractMessage.mjs';
import '../../enums/MessageTypes.mjs';
import '../../types/MessageParams.mjs';
import '../../types/MessageParamsText.mjs';
import '../../enums/Messenger/MessengerCategory.mjs';
import '../../types/Channels/Messenger/MessengerParams.mjs';

/**
 * Represents a text message for the Messenger channel.
 *
 * @group Messenger
 */
declare class MessengerText extends AbstractTextMessage implements MessengerTextParams {
    /**
     * The channel for this message (always 'messenger').
     */
    channel: Channels.MESSENGER;
    /**
     * The messenger information for this message.
     */
    messenger: MessengerType;
    /**
     * Sends a text message to the Facebook Messenger channel.
     *
     * @param {MessengerTextParams} params - The parameters for creating a Messenger text message.
     *
     * @example
     * ```ts
     * import { MessengerText } from '@vonage/messages';
     *
     * const { messageUUID } = await messagesClient.send(new MessengerText({
     *  to: TO_NUMBER,
     *  from: FROM_NUMBER,
     *  text: 'Hello world',
     *  clientRef: 'my-personal-reference',
     * }));
     *
     * console.log(`Message sent successfully with UUID ${messageUUID}`);
     * ```
     */
    constructor(params: Omit<MessengerTextParams, 'channel' | 'messageType'>);
}

export { MessengerText };
