import { AbstractImageMessage } from '../AbstractImageMessage.mjs';
import { Channels } from '../../enums/Channels.mjs';
import { MessageParamsImage } from '../../types/MessageParamsImage.mjs';
import '../AbstractMessage.mjs';
import '../../enums/MessageTypes.mjs';
import '../../types/MessageParams.mjs';
import '../../types/MessageImageType.mjs';

/**
 * Represents an image message for the MMS channel.
 *
 * @group MMS
 */
declare class MMSImage extends AbstractImageMessage implements MessageParamsImage {
    /**
     * The channel for this message (always 'mms').
     */
    channel: Channels.MMS;
    /**
     * Time-To-Live (how long a message should exist before it is delivered
     * successfully) in seconds. If a message is not delivered successfully within
     * the TTL time, the message is considered expired and will be rejected if TTL
     * is supported.
     */
    ttl?: number;
    /**
     * Send an MMS image message.
     *
     * @param {MessageParamsImage} params - The parameters for creating the image message.
     * @example
     * ```ts
     * import { MMSImage } from '@vonage/messages';
     *
     * const { messageUUID } = await messagesClient.send(new MMSImage({
     *  to: TO_NUMBER,
     *  from: FROM_NUMBER,
     *  image: {
     *    url: 'https://example.com/image.jpg',
     *    caption: 'This is an example image',
     *  },
     *  clientRef: 'my-personal-reference',
     * }));
     *
     * console.log(`Message sent successfully with UUID ${messageUUID}`);
     * ```
     */
    constructor(params: Omit<MessageParamsImage, 'channel' | 'messageType'>);
}

export { MMSImage };
