import {
  AbstractMessage
} from "./chunk-3WQKOHCE.mjs";

// lib/classes/MMS/MMSContent.ts
var MMSContent = class extends AbstractMessage {
  /**
   * The channel for this message (always 'mms').
   */
  channel = "mms" /* MMS */;
  /**
   * The type of message (always 'content').
   */
  messageType = "content" /* CONTENT */;
  /**
   * Time-To-Live (how long a message should exist before it is delivered
   * successfully) in seconds. If a message is not delivered successfully within
   * the TTL time, the message is considered expired and will be rejected if TTL
   * is supported.
   */
  ttl;
  content;
  /**
   * Send an MMS custom message.
   *
   * @param {MessageParamsContent} params - The parameters for creating the custom message.
   * @example
   * ```ts
   * import { MMSContent } from '@vonage/messages';
   *
   * const { messageUUID } = await messagesClient.send(new MMSContent({
   *  to: TO_NUMBER,
   *  from: FROM_NUMBER,
   *  custom: [
   *    {
   *      type: 'image',
   *      url: 'https://example.com/image.jpg',
   *      caption: 'My cool image',
   *    }
   *  ],
   * });
   *
   * console.log(`Message sent successfully with UUID ${messageUUID}`);
   * ```
   */
  constructor(params) {
    super(params);
    this.content = params.content;
  }
};

export {
  MMSContent
};
