import {
  AbstractMessage
} from "./chunk-3WQKOHCE.mjs";

// lib/classes/WhatsApp/WhatsAppTemplate.ts
var WhatsAppTemplate = class extends AbstractMessage {
  /**
   * The channel for this message (always 'whatsapp').
   */
  channel = "whatsapp" /* WHATSAPP */;
  /**
   * The type of message (always 'template').
   */
  messageType = "template" /* TEMPLATE */;
  whatsapp;
  template;
  context;
  /**
   * Send a template message to a WhatsApp user.
   *
   * @param {WhatsAppTemplateParams} params - The parameters for creating a WhatsApp template message.
   *
   * @example
   * ```ts
   * import { WhatsAppTemplate, WhatsAppLanguageCode } from '@vonage/messages';
   *
   * const { messageUUID } = await messagesClient.send(new WhatsAppTemplate({
   *  to: TO_NUMBER,
   *  from: FROM_NUMBER,
   *  whatsapp: {
   *    policy: 'deterministic',
   *    locale: WhatsAppLanguageCode.EN,
   *  },
   *  template: {
   *    name: 'your-template-name',
   *    parameters: [
   *      'foo',
   *      'bar',
   *    ],
   *  },
   *  clientRef: 'my-personal-reference',
   * }));
   *
   * console.log(`Message sent successfully with UUID ${messageUUID}`);
   * ```
   */
  constructor(params) {
    super(params);
    this.whatsapp = params.whatsapp;
    this.template = params.template;
    if (params.context) {
      this.context = params.context;
    }
  }
};

export {
  WhatsAppTemplate
};
