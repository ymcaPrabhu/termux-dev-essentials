"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/redact.ts
var redact_exports = {};
__export(redact_exports, {
  Redact: () => Redact
});
module.exports = __toCommonJS(redact_exports);
var import_server_client = require("@vonage/server-client");
var Redact = class extends import_server_client.Client {
  /**
     * The authentication type used for Redact API requests.
     */
  authType = import_server_client.AuthenticationType.BASIC;
  /**
     * Redacts a specific message using the provided parameters.
     *
     * @param {TransactionParams} params - Parameters for redacting a message.
     * @return {Promise<void>} A Promise that resolves when the redaction is successful.
     *
     * @throws {Error} If there is an error in processing the redaction request.
     */
  async redactMessage(params) {
    await this.sendPostRequest(
      `${this.config.apiHost}/v1/redact/transaction`,
      params
    );
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Redact
});
