"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/index.ts
var index_exports = {};
__export(index_exports, {
  ProductType: () => ProductType,
  Redact: () => Redact,
  Type: () => Type
});
module.exports = __toCommonJS(index_exports);

// lib/enums/product.ts
var ProductType = /* @__PURE__ */ ((ProductType2) => {
  ProductType2["SMS"] = "SMS";
  ProductType2["Voice"] = "Voice";
  ProductType2["NumberInsight"] = "NumberInsight";
  ProductType2["Verify"] = "Verify";
  ProductType2["VerifySDK"] = "VerifySDK";
  return ProductType2;
})(ProductType || {});

// lib/enums/type.ts
var Type = /* @__PURE__ */ ((Type2) => {
  Type2["INBOUND"] = "Inbound";
  Type2["OUTBOUND"] = "Outbound";
  return Type2;
})(Type || {});

// lib/redact.ts
var import_server_client = require("@vonage/server-client");
var Redact = class extends import_server_client.Client {
  /**
     * The authentication type used for Redact API requests.
     */
  authType = import_server_client.AuthenticationType.BASIC;
  /**
     * Redacts a specific message using the provided parameters.
     *
     * @param {TransactionParams} params - Parameters for redacting a message.
     * @return {Promise<void>} A Promise that resolves when the redaction is successful.
     *
     * @throws {Error} If there is an error in processing the redaction request.
     */
  async redactMessage(params) {
    await this.sendPostRequest(
      `${this.config.apiHost}/v1/redact/transaction`,
      params
    );
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ProductType,
  Redact,
  Type
});
