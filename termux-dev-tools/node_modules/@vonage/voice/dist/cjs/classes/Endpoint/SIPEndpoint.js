"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/classes/Endpoint/SIPEndpoint.ts
var SIPEndpoint_exports = {};
__export(SIPEndpoint_exports, {
  SIPEndpoint: () => SIPEndpoint
});
module.exports = __toCommonJS(SIPEndpoint_exports);
var import_debug = __toESM(require("debug"));
(0, import_debug.default)("@vonage/voice")(
  "This class is deprecated. Please update to use the SIPEndpointType type instead"
);
var SIPEndpoint = class {
  /**
   * The type of the endpoint, which is always 'sip'.
   */
  type;
  /**
   * The SIP URI associated with this endpoint.
   *
   * @param {string} uri - The SIP URI for the SIP endpoint.
   */
  uri;
  /**
   * Optional custom headers to include in SIP requests.
   *
   * @param {Array<Record<string, unknown>>} headers - Optional custom headers as an array of key-value pairs.
   */
  headers;
  /**
   * Create a new SIPEndpoint instance.
   *
   * @param {string} uri - The SIP URI for the SIP endpoint.
   * @param {Array<Record<string, unknown>>} headers - Optional custom headers as an array of key-value pairs.
   */
  constructor(uri, headers) {
    this.type = "sip";
    this.uri = uri;
    if (headers) {
      this.headers = headers[0];
    }
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SIPEndpoint
});
