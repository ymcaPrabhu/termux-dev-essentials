import { NCCOAction } from '../../types/NCCO/NCCOActions.js';
import '../../types/NCCO/RecordAction.js';
import '../../enums/NCCOActions.js';
import '../../enums/NCCO/RecordingFormat.js';
import '../../types/NCCO/ConversationAction.js';
import '../../types/NCCO/ConnectAction.js';
import '../../types/Endpoint/CallEndpoint.js';
import '../../types/Endpoint/PhoneEndpoint.js';
import '../../types/Endpoint/SIPEndpoint.js';
import '../../types/Endpoint/VBCEndpoint.js';
import '../../types/Endpoint/WebsocketEndpoint.js';
import '../../types/Endpoint/AppEndpoint.js';
import '../../enums/NCCO/ConnectEventType.js';
import '../../enums/NCCO/MachineDetection.js';
import '../../types/NCCO/TalkAction.js';
import '../../enums/TTSLanguages.js';
import '../../types/NCCO/StreamAction.js';
import '../../types/NCCO/InputAction.js';
import '../../types/NCCO/DTMFSettings.js';
import '../../types/NCCO/SpeechSettings.js';
import '../../types/NCCO/NotifyAction.js';

/**
 * A builder class for creating Nexmo Call Control Objects (NCCOs).
 */
declare class NCCOBuilder {
    protected actions: Array<NCCOAction>;
    /**
     * Add an action to the NCCO builder.
     *
     * @param {Action} action - The action to add to the NCCO.
     * @return {NCCOBuilder} - The NCCO builder instance (for method chaining).
     */
    addAction(action: NCCOAction): NCCOBuilder;
    /**
     * Build the NCCO by serializing the added actions.
     *
     * @return {Array<Action | Serializable>} - The built NCCO, which is an array of actions.
     */
    build(): Array<NCCOAction>;
}

export { NCCOBuilder };
