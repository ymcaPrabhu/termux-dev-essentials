import { CallWithAnswerURL } from './CallWithAnswerURL.js';
import { CallWithNCCO } from './CallWithNCCO.js';
import './CommonOutboundCall.js';
import '../enums/HttpMethod.js';
import '../enums/MachineDetctionBehavior.js';
import './Endpoint/CallEndpoint.js';
import './Endpoint/PhoneEndpoint.js';
import './Endpoint/SIPEndpoint.js';
import './Endpoint/VBCEndpoint.js';
import './Endpoint/WebsocketEndpoint.js';
import './Endpoint/AppEndpoint.js';
import './AdvancedMachineDetection.js';
import '../enums/AdvancedMachineDetectionMode.js';
import './CommonCallFields.js';
import './Endpoint/PSTNEndpoint.js';
import './NCCO/NCCOActions.js';
import './NCCO/RecordAction.js';
import '../enums/NCCOActions.js';
import '../enums/NCCO/RecordingFormat.js';
import './NCCO/ConversationAction.js';
import './NCCO/ConnectAction.js';
import '../enums/NCCO/ConnectEventType.js';
import '../enums/NCCO/MachineDetection.js';
import './NCCO/TalkAction.js';
import '../enums/TTSLanguages.js';
import './NCCO/StreamAction.js';
import './NCCO/InputAction.js';
import './NCCO/DTMFSettings.js';
import './NCCO/SpeechSettings.js';
import './NCCO/NotifyAction.js';

/**
 * Represents an outbound call, which can either include an answer URL (for simple call scenarios)
 * or an NCCO (Nexmo Call Control Object) for more complex call scenarios. Depending on the use case,
 * it can be either a `CallWithAnswerURL` or a `CallWithNCCO`.
 */
type OutboundCall = CallWithNCCO | CallWithAnswerURL;

export type { OutboundCall };
