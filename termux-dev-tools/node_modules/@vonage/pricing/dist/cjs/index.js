"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/index.ts
var index_exports = {};
__export(index_exports, {
  Pricing: () => Pricing,
  ServiceType: () => ServiceType
});
module.exports = __toCommonJS(index_exports);

// lib/pricing.ts
var import_server_client = require("@vonage/server-client");
var Pricing = class extends import_server_client.Client {
  /**
   * @see {@link Client.authType}
   */
  authType = import_server_client.AuthenticationType.BASIC;
  /**
   * Retrieves pricing information for a specific country and service type.
   *
   * @param {ServiceType} type - The service type.
   * @param {string} country - The country for which pricing information is requested.
   * @return {Promise<OutboundCountryPricingResponse>} - Pricing information for the specified country.
   * @example
   *
   * ```ts
   * import { ServiceType } from '@vonage/pricing';
   *
   * const pricing = await pricingClient.listCountryPricing(ServiceType.SMS, 'GB');
   * console.log(`The current price for Great Britian is ${pricing.defaultPrice}`);
   * ```
   */
  async listCountryPricing(type, country) {
    const resp = await this.sendGetRequest(
      `${this.config.restHost}/account/get-pricing/outbound/${type}`,
      { country }
    );
    return resp.data;
  }
  /**
   * Retrieves pricing information for all countries and a specific service type.
   * @param {ServiceType} type - The service type.
   * @return {Promise<OutboundAllCountriesPricingResponse>} - Pricing information for all countries.
   * @example
   * ```ts
   * import { ServiceType } from '@vonage/pricing';
   *
   * const pricing = await pricingClient.listAllCountriesPricing(ServiceType.SMS);
   * for (const country in pricing.countries) {
   *  console.log(`The current price for ${country.countryName} is ${country.defaultPrice}`);
   * }
   * ```
   */
  async listAllCountriesPricing(type) {
    const resp = await this.sendGetRequest(
      `${this.config.restHost}/account/get-full-pricing/outbound/${type}`
    );
    return resp.data;
  }
  /**
   * Retrieves pricing information for a specific prefix and service type.
   * @param {ServiceType} type - The service type.
   * @param {string} prefix - The prefix for which pricing information is requested.
   * @return {Promise<OutboundAllCountriesPricingResponse>} - Pricing information for the specified prefix.
   *
   * @example
   * ```ts
   * import { ServiceType } from '@vonage/pricing';
   *
   * const pricing = await pricingClient.listPrefixPricing(ServiceType.SMS, '44');
   * console.log(`The current price for Great Britian is ${pricing.defaultPrice}`);
   * ```
   */
  async listPrefixPricing(type, prefix) {
    const resp = await this.sendGetRequest(
      `${this.config.restHost}/account/get-prefix-pricing/outbound/${type}`,
      { prefix }
    );
    return resp.data;
  }
};

// lib/enums/ServiceType.ts
var ServiceType = /* @__PURE__ */ ((ServiceType2) => {
  ServiceType2["SMS"] = "sms";
  ServiceType2["SMS_TRANSIT"] = "sms-transit";
  ServiceType2["VOICE"] = "voice";
  return ServiceType2;
})(ServiceType || {});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Pricing,
  ServiceType
});
