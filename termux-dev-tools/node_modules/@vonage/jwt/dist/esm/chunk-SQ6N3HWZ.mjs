import {
  MissingPrivateKeyError
} from "./chunk-ZA5447UK.mjs";
import {
  InvalidPrivateKeyError
} from "./chunk-AU22SSAN.mjs";

// lib/verifySignature.ts
import jsonwebtoken from "jsonwebtoken";
import debug from "debug";
var { verify } = jsonwebtoken;
var log = debug("vonage:jwt:verifySignature");
var verifySignature = (jwt, privateKey) => {
  if (!privateKey) {
    throw new MissingPrivateKeyError();
  }
  if (typeof privateKey !== "string" && !(privateKey instanceof Buffer)) {
    throw new InvalidPrivateKeyError();
  }
  try {
    verify(jwt, privateKey, {
      algorithms: ["RS256", "HS256"]
    });
    return true;
  } catch (error) {
    log("Error when verifying token", error);
  }
  return false;
};

export {
  verifySignature
};
