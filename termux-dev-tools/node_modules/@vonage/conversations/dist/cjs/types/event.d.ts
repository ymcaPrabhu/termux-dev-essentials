import { EventType } from '../enums/eventsTypes.js';
import { AnyMessageBody } from './anyMessageBody.js';
import { EventUser } from './eventUser.js';
import './messageASRBody.js';
import './messageChannelBody.js';
import '../enums/channelType.js';
import './anyChannel.js';
import './phoneNumberChannel.js';
import './sipChannel.js';
import './appChannel.js';
import './websocketChannel.js';
import './vbcChannel.js';
import './messageAudioBody.js';
import '../enums/eventMessageType.js';
import './messageConversationBody.js';
import '../enums/conversationState.js';
import './messageCustomBody.js';
import './messageEventBody.js';
import './messageFileBody.js';
import './messageImageBody.js';
import './messageLegBody.js';
import '@vonage/messages';
import '@vonage/voice';
import '../enums/legStatus.js';
import '../enums/reasonMessages.js';
import './messageLocationBody.js';
import './messageMemberBody.js';
import './member.js';
import '@vonage/users';
import '../enums/memberState.js';
import './audioSettings.js';
import './parameters/updateMemberParameters.js';
import './messageRTCAnswerBody.js';
import './messageRTCIdBody.js';
import './messageRecordBody.js';
import './messageRecordIdBody.js';
import './messageSIPDirectionBody.js';
import './messageSIPBody.js';
import './messageSIPHangupBody.js';
import './messageSIPMachineBody.js';
import './messageSIPStatusBody.js';
import './messageSayBody.js';
import './messageSayIdBody.js';
import './messageStatusBody.js';
import './messageTemplateBody.js';
import './messageTextBody.js';
import './messageVCardBody.js';
import './messageVideoBody.js';

type Event = {
    /**
     * The ID of the message.
     */
    id: number;
    /**
     * Message type
     */
    type: EventType;
    /**
     * Member ID of the event.
     */
    from: string;
    /**
     * Data of the event.
     */
    body: AnyMessageBody;
    /**
     * Timestamp of the event.
     */
    timestamp?: string;
    /**
     * Sender User
     */
    fromUser?: EventUser;
    /**
     * Sender Memeber
     */
    fromMember?: {
        /**
         * Member ID
         */
        id: string;
    };
};

export type { Event };
