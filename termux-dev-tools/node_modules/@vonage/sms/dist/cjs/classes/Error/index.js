"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// lib/classes/Error/index.ts
var Error_exports = {};
__export(Error_exports, {
  MessageSendAllFailure: () => MessageSendAllFailure,
  MessageSendPartialFailure: () => MessageSendPartialFailure,
  SMSFailure: () => SMSFailure
});
module.exports = __toCommonJS(Error_exports);

// lib/classes/Error/SMSFailure.ts
var SMSFailure = class extends Error {
  /**
   * The response containing details about the SMS messages.
   */
  response;
  /**
   * Creates an instance of SMSFailure.
   *
   * @param {string} message - The error message.
   * @param {SMSMessages} response - The response containing details about the SMS messages.
   */
  constructor(message, response) {
    super(message);
    this.response = response;
  }
  /**
   * Retrieves an array of all messages in the response.
   *
   * @return {Array<ErrorMessage | Message>} An array of all messages in the response.
   */
  getMessages() {
    return this.response.messages || [];
  }
  /**
   * Retrieves an array of failed messages in the response.
   *
   * @return {Array<ErrorMessage>} An array of failed messages in the response.
   */
  getFailedMessages() {
    return this.getMessages().filter(
      ({ status }) => status !== "0" /* SUCCESS */
    );
  }
  /**
   * Retrieves the original response containing details about the SMS messages.
   *
   * @return {SMSMessages} The original response containing details about the SMS messages.
   */
  getResponse() {
    return this.response;
  }
  /**
   * Retrieves an array of successfully sent messages in the response.
   *
   * @return {Array<Message>} An array of successfully sent messages in the response.
   */
  getSuccessfulMessages() {
    return this.getMessages().filter(
      ({ status }) => status === "0" /* SUCCESS */
    );
  }
};

// lib/classes/Error/MessageSendAllFailure.ts
var MessageSendAllFailure = class extends SMSFailure {
  /**
   * Creates an instance of MessageSendAllFailure.
   *
   * @param {SMSMessages} response - The response containing details about the failed SMS messages.
   */
  constructor(response) {
    super("All SMS messages failed to send", response);
  }
};

// lib/classes/Error/MessageSendPartialFailure.ts
var MessageSendPartialFailure = class extends SMSFailure {
  /**
   * Creates an instance of MessageSendPartialFailure.
   *
   * @param {SMSMessages} response - The response containing details about the partially failed SMS messages.
   */
  constructor(response) {
    super("Some SMS messages failed to send", response);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  MessageSendAllFailure,
  MessageSendPartialFailure,
  SMSFailure
});
